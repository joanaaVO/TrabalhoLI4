@page "/InterestPoints/New"

@using HermesTravel.Data
@using HermesTravel.Pages
@using DataAccessHermesTravel

@inject NavigationManager helper
@inject ISqlDataAccess _data
@inject IConfiguration _config
@inject User user
@inject IJSRuntime JSRuntime


<!DOCTYPE html>
<html lang="pt">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HermesTravel</title>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="HermesTravel.styles.css" rel="stylesheet" />

    <style>
        .img {
            border: 2px solid #06263d;
            border-radius: 10%;
            background-color: white;
        }

        .navbar {
            border-bottom: 2px solid #06263d;
        }

        .titleText {
            color: #06263d;
            font-size: 50px;
            padding-left: 15px;
            margin-top: 5px;
            margin-bottom: 35px;
        }

        .exitB {
            color: black;
            font-weight: bold;
            padding: 10px 57px;
        }

        .exitB:hover {
            transition: background-color 0.25s;
            background-color: #b04848;
            color: black;
            cursor: pointer;
        }

        .progress {
            height: 40px;
            width: 40%;
            border: 1px solid #06263d;
            margin: 0 auto;
        }

        .progress-bar {
            background-color: #f9932f;
        }

        .avatar {
            height: 240px;
            width: 240px;
            border: 2px solid #06263d;
            border-radius: 5%;
            margin: 10px 10px 10px;
        }

        .userInfo {
            text-overflow: ellipsis;
            text-align: left;
            font-size: 30px;
            margin: auto 0;
        }

        .userInfo>:nth-of-type(3) {
            margin: 40px 0 20px;
        }

        .userInfo>:nth-of-type(4) {
            margin: 20px 0 10px;
        }

        .spanF {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 10%;
            width: 150px;
            line-height: 40px;
            font-weight: bold;
            display: inline-block;
            text-align: center;
        }

        .spanF-big {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 10%;
            width: 400px;
            line-height: 40px;
            font-weight: bold;
            display: inline-block;
            text-align: center;
        }

        .btnTop {
            width: 275px;
        }

        hr {
            background-color: #06263d;
            border: 0 none;
            color: #06263d;
            height: 1px;
            margin: 20px auto;
            width: 75%;
        }

        .litleHR {
            width: 50%;
        }

        .buttons {
            margin-top: 20px;
        }

        .btn-aux {
            margin-top: 10px;
            width: 275px;
        }

        .infoCol {
            border: 2px solid #06263d;
            background-color: #f9932f;
            border-radius: 5%;
        }

        .infoCol>p {
            border-bottom: 2px solid #06263d;
        }

        .infoCol>p:last-child {
            border-bottom: none;
        }

        .pointIMG {
            height: 240px;
            width: 400px;
            border: 2px solid #06263d;
            border-radius: 5%;
            margin-left: 100px;
        }

        .inputClass {
            margin: 0 auto;
            width: 400px;
        }

        @@media (max-width: 767.98px) {
            .container {
                max-width: 350px;
            }

            .avatar {
                height: 150px;
                width: 150px;
            }

            .userInfo {
                width: 150px;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="Home">
                <img src="./images/logo.png" width="50" height="75" class="img img-aux d-inline-block align-top" alt="">
                <span class="titleText fw-bold">HermesTravel</span>
            </a>
            <a class="btn btn-primary exitB" href="/">Terminar Sessão</a>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row align-items-start">
            <div class="col-4">
                <div class="progress position-relative">
                    <div class="progress-bar progress-bar-striped" role="progressbar"
                        style="width: @user.calculateLevel().Item2;" aria-valuenow="@user.calculateLevel().Item3"
                        aria-valuemin="0" aria-valuemax="100"></div>
                    <span
                        class="justify-content-center d-flex position-absolute w-100 fs-5">@user.calculateLevel().Item3%</span>
                </div>
                <img class="img-fluid avatar" src="@user.imagemURL">
            </div>
            <div class="col-4 align-self-center">
                <div class="userInfo">
                    <p class="fw-bold mt-2 mb-0">@user.nome</p>
                    <p class="fs-5">@user.email</p>
                    <p class="fs-5"><span class="spanF">Nível @user.calculateLevel().Item1</span></p>
                    <p class="fs-5"><span class="spanF">Amigos @user.getFriends().Count()</span></p>
                </div>
            </div>
            <div class="col-4 align-self-center">
                <div class="container">
                    <a class="btn btn-secundary btnTop fw-bold" href="InterestPoints">Voltar atrás</a>
                    @if (status == 1 || status == 2)
                    {
                        <EditForm Model="status" OnValidSubmit="@deleteInput">
                            <input class="btn btn-secundary btnTop fw-bold" type="submit" value="Inserir novo ponto" />
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>

    <hr>

    @if (status == 0)
    {
        <div class="container inputClass">
            <EditForm Model="interestpointL" OnValidSubmit="@RegisterInterestPoint">
                <div class="form-group">
                    <InputText @bind-Value="interestpointL.nome" class="form-control mb-1" type="text" id="name"
                    placeholder="Nome" required></InputText>
                    <InputText @bind-Value="interestpointL.cidade" class="form-control mb-1" type="text" id="cidade"
                    placeholder="Cidade" required></InputText>
                    <InputText @bind-Value="interestpointL.imagemURL" class="form-control mb-1" type="text" id="imagemURL"
                    placeholder="URL imagem" required></InputText>
                    <InputText @bind-Value="coordLatitude" class="form-control mb-1" type="text" id="Latitude"
                    placeholder="Latitude" required></InputText>
                    <InputText @bind-Value="coordLongitude" class="form-control" type="text" id="Longitude"
                    placeholder="Longitude" required></InputText>
                </div>
                <div class="input-group">
                    <span class="input-group-text mt-2">Categoria</span>
                    <textarea @bind="categoriesL" class="form-control mt-2" aria-label="Categorias"
                    placeholder="Separado por ','" required></textarea>
                </div>
                <div class="input-group">
                    <span class="input-group-text mt-2">Descrição</span>
                    <textarea @bind="interestpointL.descricao" class="form-control mt-2" aria-label="Descrição"
                    required></textarea>
                </div>
                @if (@user.calculateLevel().Item1 >= 10)
                {
                    <input class="btn btn-secundary btn-aux fw-bold mt-4" type="submit" value="Submeter" />
                }
            </EditForm>
        </div>
    }
    else if (status == 1)
    {
        <div class="container spanF-big fs-5">
            <p>Sugestão adicionada com sucesso!!</p>
        </div>
    }
    else
    {
        <div class="container spanF-big fs-5">
            <p>Sugestão já existe. Tente outra vez.</p>
        </div>
    }
</body>

</html>

@code
{
    public class interestPointLoad
    {
        public string nome { get; set; }
        public string cidade { get; set; }
        public string descricao { get; set; }
        public string imagemURL { get; set; }
    }

    interestPointLoad interestpointL = new interestPointLoad();
    string categoriesL = "";
    string coordLatitude = "";
    string coordLongitude = "";
    int status = 0;

    private async Task RegisterInterestPoint()
    {
        string coordenadas = coordLatitude + ", " + coordLongitude;
        string sql = "SELECT nome FROM mydb.pontointeresse WHERE nome = @Nome";
        List<String> sqlL = await _data.LoadData<string,dynamic>(sql, new { Nome = interestpointL.nome }, _config.GetConnectionString("default"));
        if(sqlL.Count == 0){

            string sqlA = "INSERT INTO mydb.pontointeresse (nome, descricao, cidade, coordenadas, imagemURL, valido) VALUES (@Nome, @Descricao, @Cidade, @Coordenadas, @Imagem, @Valido)";
            await _data.SaveData(sqlA, new { Nome = interestpointL.nome, @Descricao =  interestpointL.descricao, @Cidade = interestpointL.cidade, @Coordenadas = coordenadas, @Imagem = interestpointL.imagemURL, Valido = 0}, _config.GetConnectionString("default"));
            
            status = 1;
            string[] cats = categoriesL.Split(',');

            foreach (var c in cats){
                string sqlB = "SELECT * FROM mydb.categoria WHERE descricao = @Descricao";
                List<Category> sqlLC = await _data.LoadData<Category,dynamic>(sqlB, new { Descricao = c }, _config.GetConnectionString("default"));
                if(sqlLC.Count > 0){
                    string sqlAA = "INSERT INTO mydb.pontointeresse_has_categoria (pontointeresse_nome, categoria_idcategoria) VALUES (@Nome, @Idcategoria)";
                    await _data.SaveData(sqlAA, new { Nome = interestpointL.nome, @Idcategoria = sqlLC[0].idCategoria}, _config.GetConnectionString("default"));
                }
            }
        }
        else{
            status = 2;
        }
    }

    private void deleteInput()
    {
        interestpointL = new interestPointLoad();
        categoriesL = "";
        coordLatitude = "";
        coordLongitude = "";
        status = 0;
    }

    private async void deleteUser()
    {   
        string sqlS = "UPDATE mydb.utilizador SET login = 0 WHERE email=@Email";
        await _data.SaveData(sqlS, new { Email = user.email }, _config.GetConnectionString("default"));
        user.deleteUser();
        helper.NavigateTo("/", true);
    }
}
